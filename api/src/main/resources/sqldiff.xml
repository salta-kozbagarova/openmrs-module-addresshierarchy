<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqldiff PUBLIC "-//OpenMRS//DTD OpenMRS SQL Diff Config 1.0//EN" "http://resources.openmrs.org/doctype/sqldiff-1.0.dtd">

<sqldiff version="1.0">
	<help>
		USE:
			The diffs are ordered by datamodel version number.
			The script can be run in a top down fashion and is
			expected to not fail or overwrite old data
		
		EXPECT:
			- "use business-database-name;" was called prior to
			   calling this script
	</help>
	
		<diff>
		<version>1.0</version>
		<author>Sri Prasanna</author>
		<date>May 28th 2008</date>
		<description>
			Address hierarchy type table. It stores the hierarchy components and its type ID.
			Address hierarchy table. It stores the hierarchy component values.
		</description>
		<sql>
			CREATE TABLE IF NOT EXISTS address_hierarchy_type
            (
            	location_attribute_type_id int(11) NOT NULL auto_increment,
                name varchar(160) NOT NULL,
                PRIMARY KEY (location_attribute_type_id)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
            
			CREATE TABLE IF NOT EXISTS address_hierarchy
            (
            	location_attribute_type_value_id int(11) NOT NULL auto_increment,
                name varchar(160) NOT NULL,
                type_id int(11) NOT NULL,
                parent_location_attribute_type_value_id int(11),
                PRIMARY KEY (`location_attribute_type_value_id`),
                KEY `parent_location_id` (`parent_location_attribute_type_value_id`),
                KEY `location_type_id` (`type_id`),
                CONSTRAINT `parent_location_id` FOREIGN KEY (`parent_location_attribute_type_value_id`) REFERENCES `address_hierarchy` (`location_attribute_type_value_id`),
                CONSTRAINT `location_type_id` FOREIGN KEY (`type_id`) REFERENCES `address_hierarchy_type` (`location_attribute_type_id`)
			) ENGINE=InnoDB DEFAULT CHARSET=utf8;
			
		</sql>
	</diff>
	
	<diff>
		<version>1.1</version>
		<author>Mark Goodrich</author>
		<date>April 21th 2011</date>
		<description>
			This updates the tables to the Rwanda Address Hierarchy format
		</description>
		
		<sql>
			ALTER TABLE address_hierarchy ADD COLUMN user_generated_id varchar(11);
			ALTER TABLE address_hierarchy DROP FOREIGN KEY location_type_id;
			ALTER TABLE address_hierarchy DROP KEY location_type_id;
			ALTER TABLE address_hierarchy DROP FOREIGN KEY parent_location_id;
			ALTER TABLE address_hierarchy DROP KEY parent_location_id;
			
			ALTER TABLE address_hierarchy CHANGE COLUMN location_attribute_type_value_id `address_hierarchy_id` int(11) NOT NULL auto_increment;
			ALTER TABLE address_hierarchy CHANGE COLUMN parent_location_attribute_type_value_id `parent_id` int(11);
		
			ALTER TABLE address_hierarchy ADD KEY `parent_location_id` (`parent_id`);
			ALTER TABLE address_hierarchy ADD CONSTRAINT `parent_location_id` FOREIGN KEY (`parent_id`) REFERENCES `address_hierarchy` (`address_hierarchy_id`);
            ALTER TABLE address_hierarchy ADD KEY `location_type_id` (`type_id`);
            ALTER TABLE address_hierarchy ADD CONSTRAINT `location_type_id` FOREIGN KEY (`type_id`) REFERENCES `address_hierarchy_type` (`location_attribute_type_id`);
			
            ALTER TABLE address_hierarchy_type ADD COLUMN `parent_type_id` int(11) default NULL;
            ALTER TABLE address_hierarchy_type ADD COLUMN `child_type_id` int(11) default NULL;
		</sql>
		
	</diff>
	
	
	<!-- now execute the other diffs added by the Rwanda Address Hierarchy module -->
	<diff>
		<version>1.3</version>
		<author>John DeRiggi</author>
		<date>November 6 2009</date>
		<description>
			Add spatial information to the address hierarchy regions.
		</description>
		<sql>
			DROP TABLE IF EXISTS unstructured_address;
			ALTER TABLE address_hierarchy add column latitude double, add column longitude double, add column elevation double;
			
		</sql>
	</diff>	
	
	<diff>
		<version>1.3.9</version>
		<author>Mark Goodrich</author>
		<date>May 17 2010</date>
		<description>
			Added index on address_hierarchy name
		</description>
		<sql>
			create index name_ah on address_hierarchy(name);
		</sql>
	</diff>
	<!-- end of diffs added by the Rwanda Address Hierarchy module -->
	<!-- when updating from Rwanda Address Hierarchy module set global prop addresshierarchy.database_version = 1.3.9 -->
	
	<diff>
		<version>1.4</version>
		<author>Mark Goodrich</author>
		<date>Apr 21 2011</date>
		<description>
			Change name of id on address hierarchy type (need to drop foreign key constraint)
			Note that we should add this foreign key constraint back in, but for some reason I can't get it to work
		</description>
		<sql>
			ALTER TABLE address_hierarchy DROP FOREIGN KEY location_type_id;
		    ALTER TABLE address_hierarchy_type CHANGE COLUMN `location_attribute_type_id` `address_hierarchy_type_id` int(11) NOT NULL AUTO_INCREMENT;
		</sql>
	</diff>
	
	<diff>
		<version>1.5</version>
		<author>Mark Goodrich</author>
		<date>Apr 22 2011</date>
		<description>
			Add the new field that we are using to store what address field a type maps to
		</description>
		<sql>
			ALTER TABLE address_hierarchy_type ADD COLUMN `address_field` varchar(50) NOT NULL;
		</sql>
	</diff>
	
	<diff>
		<version>1.6</version>
		<author>Mark Goodrich</author>
		<date>Apr 22 2011</date>
		<description>
			Added uuid field to Address Hierarchy table
		</description>
		<sql>
			ALTER TABLE address_hierarchy
			ADD COLUMN `uuid` char(38)
			NOT NULL;
		</sql>
	</diff>
	
	<diff>
		<version>1.7</version>
		<author>Mark Goodrich</author>
		<date>Apr 22 2011</date>
		<description>
			Added uuid field to Address Hierarchy type table
		</description>
		<sql>
			ALTER TABLE address_hierarchy_type
			ADD COLUMN `uuid` char(38)
			NOT NULL;
		</sql>
	</diff>
	
	<diff>
		<version>1.7.1</version>
		<author>Mark Goodrich</author>
		<date>Apr 22 2011</date>
		<description>
			Add uuids to any existing entries
		</description>
		<sql>
			UPDATE address_hierarchy SET uuid = UUID();
			UPDATE address_hierarchy_type SET uuid = UUID();
		</sql>
	</diff>
	
	<diff>
		<version>1.8</version>
		<author>Mark Goodrich</author>
		<date>Apr 25 2011</date>
		<description>
			Remove child_type_id from address_hierarchy_type table
		</description>
		<sql>
			ALTER TABLE address_hierarchy_type DROP COLUMN child_type_id;
		</sql>
	</diff>
	
	<diff>
		<version>1.9</version>
		<author>Mark Goodrich</author>
		<date>Apr 25 2011</date>
		<description>
			Rename address_hiearchy table
		</description>
		<sql>
			ALTER TABLE address_hierarchy RENAME address_hierarchy_entry;
		</sql>
	</diff>
	
	<diff>
		<version>2.0</version>
		<author>Mark Goodrich</author>
		<date>Apr 25 2011</date>
		<description>
			Change name of id on address hierarchy type to be consistent with new table name
			Note that we should add this foreign key constraint back in, but for some reason I can't get it to work:
			ALTER TABLE address_hierarchy_entry ADD CONSTRAINT `parent_location_id` FOREIGN KEY (`address_hierarchy_entry_id`) REFERENCES `address_hierarchy_entry` (`address_hierarchy_entry_id`);
		</description>
		<sql>
			ALTER TABLE address_hierarchy_entry DROP FOREIGN KEY parent_location_id;
		    ALTER TABLE address_hierarchy_entry CHANGE COLUMN `address_hierarchy_id` `address_hierarchy_entry_id` int(11) NOT NULL AUTO_INCREMENT;
		</sql>
	</diff>
	
	<diff>
		<version>2.1</version>
		<author>Mark Goodrich</author>
		<date>Apr 29 2011</date>
		<description>
			Rename address_hiearchy_type table
		</description>
		<sql>
			ALTER TABLE address_hierarchy_type RENAME address_hierarchy_level;
		</sql>
	</diff>
	
	<diff>
		<version>2.2</version>
		<author>Mark Goodrich</author>
		<date>Apr 29 2011</date>
		<description>
			Change the name of the address_hierarchy_type_id and parent_type_id to be consistent
		</description>
		<sql>
		    ALTER TABLE address_hierarchy_level CHANGE COLUMN `address_hierarchy_type_id` `address_hierarchy_level_id` int(11) NOT NULL AUTO_INCREMENT;
		    ALTER TABLE address_hierarchy_level CHANGE COLUMN `parent_type_id` `parent_level_id` int(11);
		</sql>
	</diff>
	
	<diff>
		<version>2.2.1</version>
		<author>Mark Goodrich</author>
		<date>Apr 29 2011</date>
		<description>
			Change the name of the type_id to level_id to be consistent
		</description>
		<sql>
		    ALTER TABLE address_hierarchy_entry CHANGE COLUMN `type_id` `level_id` int(11);
		</sql>
	</diff>
	
	<diff>
		<version>2.3</version>
		<author>Mark Goodrich</author>
		<date>May 2 2011</date>
		<description>
			Modify Address Hierarchy Level so name can be null
		</description>
		<sql>
			ALTER TABLE address_hierarchy_level CHANGE COLUMN `name` `name` varchar(160);
		</sql>
	</diff>
	
	<diff>
		<version>2.4</version>
		<author>Mark Goodrich</author>
		<date>May 12 2011</date>
		<description>
			Allow address_field to be nullable
		</description>
		<sql>
			ALTER TABLE address_hierarchy_level CHANGE COLUMN `address_field` `address_field` varchar(50);
		</sql>
	</diff>
	
	<diff>
		<version>2.5</version>
		<author>Mark Goodrich</author>
		<date>May 16 2011</date>
		<description>
			Allow add required field to address_field_level
		</description>
		<sql>
			ALTER TABLE address_hierarchy_level ADD COLUMN `required` tinyint(1) NOT NULL default '0';
			ALTER TABLE address_hierarchy_level ADD COLUMN `non_hierarchical` tinyint(1) NOT NULL default '0';
		</sql>
	</diff>
	
	<diff>
		<version>2.6</version>
		<author>Mark Goodrich</author>
		<date>May 17 2011</date>
		<description>
		 	address_hierarchy_entry level should not be allowed to be null
		</description>
		<sql>
			ALTER TABLE address_hierarchy_entry CHANGE COLUMN `level_id` `level_id` int(11) NOT NULL;
		</sql>
	</diff>
	
	<diff>
		<version>2.6.1</version>
		<author>Mark Goodrich</author>
		<date>May 17 2011</date>
		<description>
		 	address_hierarchy_level parent_id and address_field indexes
		</description>
		<sql>
			ALTER TABLE address_hierarchy_level ADD INDEX address_field_unique (address_field);
			ALTER TABLE address_hierarchy_level ADD UNIQUE parent_level_id_unique (parent_level_id);
		</sql>
	</diff>
	
	<diff>
		<version>2.6.2</version>
		<author>Mark Goodrich</author>
		<date>May 17 2011</date>
		<description>
		 	redo the indexing on address_hierarchy_entry
		</description>
		<sql>
			DROP INDEX parent_location_id ON address_hierarchy_entry;
			DROP INDEX location_type_id ON address_hierarchy_entry;
			DROP INDEX name_ah ON address_hierarchy_entry;
			ALTER TABLE address_hierarchy_entry ADD INDEX parent_name (parent_id,name(20));
			ALTER TABLE address_hierarchy_entry ADD INDEX level_name (level_id,name(20));
		</sql>
	</diff>
	
	<diff>
		<version>2.6.3</version>
		<author>Mark Goodrich</author>
		<date>May 17 2011</date>
		<description>
			add foreign keys
		</description>
		<sql>
			ALTER TABLE address_hierarchy_entry ADD CONSTRAINT parent_to_parent FOREIGN KEY (parent_id) REFERENCES address_hierarchy_entry (address_hierarchy_entry_id);
			ALTER TABLE address_hierarchy_entry ADD CONSTRAINT level_to_level FOREIGN KEY (level_id) REFERENCES address_hierarchy_level (address_hierarchy_level_id);
			ALTER TABLE address_hierarchy_level ADD CONSTRAINT parent_level FOREIGN KEY (parent_level_id) REFERENCES address_hierarchy_level (address_hierarchy_level_id);
		</sql>
	</diff>
	
	<diff>
		<version>2.7.0</version>
		<author>Mark Goodrich</author>
		<date>December 16 2011</date>
		<description>
			update the foreign key constraint on entries so that deletes cascade
		</description>
		<sql>
			ALTER TABLE address_hierarchy_entry DROP FOREIGN KEY parent_to_parent;
			ALTER TABLE address_hierarchy_entry ADD CONSTRAINT `parent-to-parent` FOREIGN KEY (`parent_id`) REFERENCES `address_hierarchy_entry` (`address_hierarchy_entry_id`) ON DELETE CASCADE;
		</sql>
	
	</diff>
	
	<diff>
		<version>2.8.0</version>
		<author>Mark Goodrich</author>
		<date>December 9 2011</date>
		<description>
			Add table linking address hierarchy entry to person address
		</description>
		<sql>
			CREATE TABLE IF NOT EXISTS address_hierarchy_address_to_entry_map
            (
                address_to_entry_map_id int(11) NOT NULL auto_increment,
            	address_id int(11) NOT NULL,
                entry_id int(11) NOT NULL,
                uuid char(38) NOT NULL,
                PRIMARY KEY (address_to_entry_map_id),
                CONSTRAINT address_id_to_person_address_table FOREIGN KEY person_address_index (address_id) REFERENCES person_address (person_address_id),
                CONSTRAINT entry_id_to_address_hierarchy_table FOREIGN KEY address_hierarchy_index (entry_id) REFERENCES address_hierarchy_entry (address_hierarchy_entry_id)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		</sql>
	</diff>

    <diff>
        <version>2.9.0</version>
        <author>Deepak N</author>
        <date>November 27 2013</date>
        <description>
            Remove not null constraint on address_hierarchy_entry.name
        </description>
        <sql>
            ALTER TABLE address_hierarchy_entry MODIFY name varchar(160) NULL;
        </sql>
    </diff>

    <diff>
        <version>2.10.0</version>
        <author>Mark Goodrich</author>
        <date>December 22 2014</date>
        <description>
            Add index to address_hierarchy_entry.name
        </description>
        <sql>
            CREATE INDEX address_hierarchy_entry_name_idx ON address_hierarchy_entry (name(10));
        </sql>
    </diff>
</sqldiff>
